name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'  # Cache npm dependencies for faster builds

    - name: Install dependencies
      run: npm ci  # Use npm ci for faster, reliable installs in CI

    - name: Build for production
      run: npm run build
      env:
        NODE_ENV: production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist/

    - name: Deploy to VPS
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        VPS_IP: ${{ secrets.VPS_IP }}
        VPS_USER: ${{ secrets.VPS_USER }}
        PROJECT_PATH: ${{ secrets.PROJECT_PATH }}  # e.g., /root/my_frontend or /var/www/my_project
        APP_NAME: ${{ secrets.APP_NAME }}  # Name of your app for Nginx folder
      run: |
        # Set up SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Add VPS to known hosts to avoid host key verification
        ssh-keyscan -H $VPS_IP >> ~/.ssh/known_hosts

        # Copy the dist folder to the Nginx directory
        scp -i ~/.ssh/id_rsa -r dist/* $VPS_USER@$VPS_IP:/var/www/${APP_NAME}/

        # Restart Nginx (so it starts serving the new files)
        ssh -i ~/.ssh/id_rsa $VPS_USER@$VPS_IP << 'EOF'
          sudo systemctl reload nginx
          echo "Vite app deployed successfully to /var/www/${APP_NAME}/!"
        EOF
